/*
 * This file is generated by jOOQ.
*/
package org.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.PowerDocumentsRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PowerDocuments extends TableImpl<PowerDocumentsRecord> {

    private static final long serialVersionUID = -1707642302;

    /**
     * The reference instance of <code>power_documents</code>
     */
    public static final PowerDocuments POWER_DOCUMENTS = new PowerDocuments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PowerDocumentsRecord> getRecordType() {
        return PowerDocumentsRecord.class;
    }

    /**
     * The column <code>power_documents.id</code>.
     */
    public final TableField<PowerDocumentsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('power_documents_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>power_documents.file_name</code>.
     */
    public final TableField<PowerDocumentsRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>power_documents.file_mime</code>.
     */
    public final TableField<PowerDocumentsRecord, String> FILE_MIME = createField("file_mime", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>power_documents.file_size</code>.
     */
    public final TableField<PowerDocumentsRecord, String> FILE_SIZE = createField("file_size", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>power_documents.company_representative_id</code>.
     */
    public final TableField<PowerDocumentsRecord, Long> COMPANY_REPRESENTATIVE_ID = createField("company_representative_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>power_documents.created_at</code>.
     */
    public final TableField<PowerDocumentsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>power_documents.updated_at</code>.
     */
    public final TableField<PowerDocumentsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>power_documents</code> table reference
     */
    public PowerDocuments() {
        this("power_documents", null);
    }

    /**
     * Create an aliased <code>power_documents</code> table reference
     */
    public PowerDocuments(String alias) {
        this(alias, POWER_DOCUMENTS);
    }

    private PowerDocuments(String alias, Table<PowerDocumentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PowerDocuments(String alias, Table<PowerDocumentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PowerDocumentsRecord, Long> getIdentity() {
        return Keys.IDENTITY_POWER_DOCUMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PowerDocumentsRecord> getPrimaryKey() {
        return Keys.POWER_DOCUMENTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PowerDocumentsRecord>> getKeys() {
        return Arrays.<UniqueKey<PowerDocumentsRecord>>asList(Keys.POWER_DOCUMENTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PowerDocumentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PowerDocumentsRecord, ?>>asList(Keys.POWER_DOCUMENTS__FK_RAILS_2492828378);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PowerDocuments as(String alias) {
        return new PowerDocuments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PowerDocuments rename(String name) {
        return new PowerDocuments(name, null);
    }
}
