/*
 * This file is generated by jOOQ.
*/
package org.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.CompaniesRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Companies extends TableImpl<CompaniesRecord> {

    private static final long serialVersionUID = -1228692231;

    /**
     * The reference instance of <code>companies</code>
     */
    public static final Companies COMPANIES = new Companies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompaniesRecord> getRecordType() {
        return CompaniesRecord.class;
    }

    /**
     * The column <code>companies.id</code>.
     */
    public final TableField<CompaniesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('companies_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>companies.incorporation_form_id</code>.
     */
    public final TableField<CompaniesRecord, Long> INCORPORATION_FORM_ID = createField("incorporation_form_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>companies.name</code>.
     */
    public final TableField<CompaniesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>companies.name_short</code>.
     */
    public final TableField<CompaniesRecord, String> NAME_SHORT = createField("name_short", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>companies.adress_legal</code>.
     */
    public final TableField<CompaniesRecord, String> ADRESS_LEGAL = createField("adress_legal", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>companies.adress_postal</code>.
     */
    public final TableField<CompaniesRecord, String> ADRESS_POSTAL = createField("adress_postal", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>companies.bin</code>.
     */
    public final TableField<CompaniesRecord, String> BIN = createField("bin", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>companies.created_at</code>.
     */
    public final TableField<CompaniesRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>companies.updated_at</code>.
     */
    public final TableField<CompaniesRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>companies</code> table reference
     */
    public Companies() {
        this("companies", null);
    }

    /**
     * Create an aliased <code>companies</code> table reference
     */
    public Companies(String alias) {
        this(alias, COMPANIES);
    }

    private Companies(String alias, Table<CompaniesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Companies(String alias, Table<CompaniesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompaniesRecord, Long> getIdentity() {
        return Keys.IDENTITY_COMPANIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompaniesRecord> getPrimaryKey() {
        return Keys.COMPANIES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompaniesRecord>> getKeys() {
        return Arrays.<UniqueKey<CompaniesRecord>>asList(Keys.COMPANIES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CompaniesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CompaniesRecord, ?>>asList(Keys.COMPANIES__FK_RAILS_AF5D0720FE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Companies as(String alias) {
        return new Companies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Companies rename(String name) {
        return new Companies(name, null);
    }
}
