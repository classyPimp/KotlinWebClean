/*
 * This file is generated by jOOQ.
*/
package org.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Indexes;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.AvatarsRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Avatars extends TableImpl<AvatarsRecord> {

    private static final long serialVersionUID = -875718219;

    /**
     * The reference instance of <code>avatars</code>
     */
    public static final Avatars AVATARS = new Avatars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AvatarsRecord> getRecordType() {
        return AvatarsRecord.class;
    }

    /**
     * The column <code>avatars.id</code>.
     */
    public final TableField<AvatarsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('avatars_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>avatars.file_name</code>.
     */
    public final TableField<AvatarsRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>avatars.user_id</code>.
     */
    public final TableField<AvatarsRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>avatars.created_at</code>.
     */
    public final TableField<AvatarsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>avatars.updated_at</code>.
     */
    public final TableField<AvatarsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>avatars</code> table reference
     */
    public Avatars() {
        this(DSL.name("avatars"), null);
    }

    /**
     * Create an aliased <code>avatars</code> table reference
     */
    public Avatars(String alias) {
        this(DSL.name(alias), AVATARS);
    }

    /**
     * Create an aliased <code>avatars</code> table reference
     */
    public Avatars(Name alias) {
        this(alias, AVATARS);
    }

    private Avatars(Name alias, Table<AvatarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Avatars(Name alias, Table<AvatarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AVATARS_PKEY, Indexes.INDEX_AVATARS_ON_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AvatarsRecord, Long> getIdentity() {
        return Keys.IDENTITY_AVATARS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AvatarsRecord> getPrimaryKey() {
        return Keys.AVATARS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AvatarsRecord>> getKeys() {
        return Arrays.<UniqueKey<AvatarsRecord>>asList(Keys.AVATARS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AvatarsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AvatarsRecord, ?>>asList(Keys.AVATARS__FK_RAILS_457088D9D9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Avatars as(String alias) {
        return new Avatars(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Avatars as(Name alias) {
        return new Avatars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Avatars rename(String name) {
        return new Avatars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Avatars rename(Name name) {
        return new Avatars(name, null);
    }
}
